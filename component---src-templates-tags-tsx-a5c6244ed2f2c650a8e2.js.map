{"version":3,"file":"component---src-templates-tags-tsx-a5c6244ed2f2c650a8e2.js","mappings":"kJA0EA,UA1C0C,SAACA,GACzC,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,MACA,gBAAC,KAAD,KACGA,EAAMC,KAAKC,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACtC,gBAAC,KAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH","sources":["webpack://aofleejay.com/./src/templates/tags.tsx"],"sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { BlogCard, Grid, Layout, SEO } from '../components'\n\ninterface TagsPageProps {\n  data: {\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: {\n            id: string\n            frontmatter: {\n              title: string\n              coverImage: {\n                name: string\n                publicURL: string\n              }\n              date: string\n              tags: [string]\n            }\n            fields: {\n              slug: string\n            }\n            excerpt: string\n            timeToRead: number\n          }\n        },\n      ]\n    }\n  }\n}\n\nconst TagsPage: React.FC<TagsPageProps> = (props) => {\n  return (\n    <Layout>\n      <SEO />\n      <Grid>\n        {props.data.allMarkdownRemark.edges.map(({ node }) => (\n          <BlogCard key={node.id} post={node} />\n        ))}\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($tag: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            coverImage {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 150)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default TagsPage\n"],"names":["props","data","allMarkdownRemark","edges","map","node","key","id","post"],"sourceRoot":""}